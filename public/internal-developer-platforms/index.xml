<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Internal Developer Platforms</title>
    <link>http://localhost:1313/internal-developer-platforms/index.html</link>
    <description>Mastering Developer Portals: Discover &amp; Integrate API Schemas with PortI am so dissaspointed with developer portal consoles for ignoring the fact that almost everything is discoverable through APIs. Why should I design forms and fields in Backstage if Backstage should be able to ask an API for a schema? Even if that schema is not exactly what I need and I might have to remove parts of it, that’s still easier and better than starting from scratch.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Jun 2024 16:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/internal-developer-platforms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mastering Developer Portals: Discover &amp; Integrate API Schemas with Port</title>
      <link>http://localhost:1313/internal-developer-platforms/mastering-developer-portals-discover--integrate-api-schemas-with-port/index.html</link>
      <pubDate>Mon, 24 Jun 2024 16:00:00 +0000</pubDate>
      <guid>http://localhost:1313/internal-developer-platforms/mastering-developer-portals-discover--integrate-api-schemas-with-port/index.html</guid>
      <description>I am so dissaspointed with developer portal consoles for ignoring the fact that almost everything is discoverable through APIs. Why should I design forms and fields in Backstage if Backstage should be able to ask an API for a schema? Even if that schema is not exactly what I need and I might have to remove parts of it, that’s still easier and better than starting from scratch. It’s a waste of time to do the same thing over and over again. We should define what we have, expose that through an API, and all other tools should just “discover” it. Just as that’s true for, let’s say, kubectl, it should be true for graphical user interfaces.&#xA;Hence, I spent months complaining about it and… I got it.</description>
    </item>
    <item>
      <title>How Platform Engineering Compares to Running a Restaurant</title>
      <link>http://localhost:1313/internal-developer-platforms/platform-engineering-menu/index.html</link>
      <pubDate>Mon, 29 Apr 2024 16:00:00 +0000</pubDate>
      <guid>http://localhost:1313/internal-developer-platforms/platform-engineering-menu/index.html</guid>
      <description>Platform engineering should follow similar patterns as restaurants, yet we often confuse it with a kitchen or a supermarket.&#xA;Let me explain.</description>
    </item>
  </channel>
</rss>